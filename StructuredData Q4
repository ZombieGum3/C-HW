#include <string>
#include <vector>
#include <iostream>
using namespace std;

class InventoryItem {
public:

	InventoryItem(const char* sku, double price, size_t quantity, bool onSale)
				: _sku(sku), _name(name), _age(age)
				{}
	
	void sellItem const () { quantity -= 1; }
	void addInventory const (size_t stock){ quantity += stock; }
	void toggleSaleStatus const () { onSale = !onSale; }
	
	friend ostream& operator << (ostream& stream, const Contact& contact)
	{
		return stream << << "Item SKU: {" << item.sku << "} " << "$" << item.price << " -- "
			<< item.quantity << " available. " << (item.onSale ? "true" : "false") << endl;
	}
	
	
private:
	const char* sku;
	double price;
	size_t quantity;
	bool onSale;
};

int main()
{
	InventoryItem item0 = { "1523041125", 12.00, 14, false };
	InventoryItem item1 = { "aksdjflajf", 15.99, 8, true };
	InventoryItem item2 = { "12kefe1j38", 1.72, 33, false };
	InventoryItem items[] = { item0, item1, item2 };
	for (int i = 0; i < 3; ++i)
	{
		printItem((items[i]));
	}
	// sell some stuff
	sellItem(&(items[1]));
	sellItem(&(items[2]));
	sellItem(&(items[2]));
	sellItem(&(items[0]));
	sellItem(&(items[0]));
	sellItem(&(items[2]));
	sellItem(&(items[0]));
	// get new inventory
	addInventory(&(items[0]), 5);
	addInventory(&(items[1]), 15);
	addInventory(&(items[2]), 40);
	// have a sale
	for (int i = 0; i < 3; ++i)
	{
		if (items[i].quantity > 20 && !(items[i].onSale))
			toggleSaleStatus(&(items[i]));
	}
	// print results
	for (int i = 0; i < 3; ++i)
	{
		printItem(items[i]);
	}
}
